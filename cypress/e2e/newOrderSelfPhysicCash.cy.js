describe("New order self", function () {
        it("Sing in", function () {
            const start = new Date().getTime();
            cy.viewport(1920, 1080)
            cy.log("Авторизация")
            cy.visit("https://www.vseinstrumenti.ru/represent/change/?represent_id=1&represent_type=common&url_to_redirect=https://www.vseinstrumenti.ru/&regionAutocomplete=")
            cy.contains("Вход ").click()
            cy.get("input#login-email").type("vseins_site_day100@mail.ru")
            cy.get("input#login-password").type("111111")
            cy.contains("Войти").click()
            cy.wait(1000)
            cy.get('[data-qa="user"]')
                .should('be.visible')
                .contains('Здравствуйте')
            cy.visit("https://www.vseinstrumenti.ru/run/PCabinet/MyCart/clearCart")
            cy.log("Добавление товара в корзину")
            cy.visit("https://www.vseinstrumenti.ru/instrument/shurupoverty/akkumulyatornye-dreli/")
            cy.scrollTo(0, 3500)
            cy.get("[data-behavior=\"product-listing\"] [data-behavior=\"add-to-cart\"]")
                .first()
                .click()
            cy.log("Переход в корзину")
            cy.get('.modals-content [data-behavior="go-to-cart"]').click()
            cy.wait(1000)
            cy.get('[data-qa="cart-total-sum-value"] span')
                .should('be.visible')
                .invoke('text')
                .then((totalSumCart) => {
                    cy.log("Клик на кн. Изменить данные заказа")
                    cy.get('[data-qa="cart-total-change-data-button"]').click()
                    cy.log("Проверка данных юзера")
                    cy.get('[data-qa="checkout-contractor-select"] .value')
                        .should('be.visible')
                        .contains('Тест Тестов')
                    cy.get('input[data-qa="checkout-contractor-phone"]')
                        .should('be.visible')
                        .should('have.value', '+7 (987) 654-32-10')
                    cy.log("Выбираем параметры: самовывоз, оплата налом")
                    cy.get('[data-qa="ordering-delivery-type-self"]').click({force: true})
                    cy.wait(2000)
                    cy.log("Проверка отображения карты")
                    cy.get('.ymap-container').should('be.visible')
                    cy.get('.main-container h1').contains('Оформление заказа').should('be.visible')
                    cy.get('[data-qa="ordering-payment-type-cash"]').click()
                    cy.get('[data-qa="checkout-total-payment"]').contains('Наличными или картой в магазине')
                    cy.log("Получение адреса на странице оформления")
                    cy.get('[data-qa="order-point-info"][data-is-active="true"] [data-qa="order-point-address"]')
                        .should('be.visible')
                        .invoke('text')
                        .then((officeName) => {
                            cy.log("Получение цены на странице оформления")
                            cy.get('[data-qa="checkout-total-total-price"]')
                                .should('be.visible')
                                .invoke('text')
                                .then((totalSumOrderPage) => {
                                    cy.log("Клик на кн. Подтвердить заказ")
                                    cy.get('[data-qa="ordering-total-order-create-button"]').click()
                                    cy.wait(1000)
                                    cy.url().should('match', /thanks-for-your-order/)
                                    cy.get('[data-qa="thanks-page-price"]')
                                        .should('be.visible')
                                        .invoke('text')
                                        .should((totalSumOrder) => {
                                            expect(totalSumCart.replace(/\D/g, '')).to.eq(totalSumOrder.replace(/\D/g, ''))
                                        })
                                        .should((totalSumOrder) => {
                                            expect(totalSumOrderPage.replace(/\D/g, '')).to.eq(totalSumOrder.replace(/\D/g, ''))
                                        })
                                    cy.log("Проверка отображения кн. Оплатить заказ онлайн на странице thank-you-page")
                                    cy.get('[data-qa="thanks-page-pay-online"]')
                                        .contains('Оплатить заказ онлайн')
                                        .should('be.visible')

                                    cy.log("Клик на номер заказа, переход в ЛК и проверка параметров")
                                    cy.get('[data-qa="thanks-page-order-number"]')
                                        .should('have.attr', 'target', '_blank')
                                        .invoke('removeAttr', 'target')
                                        .invoke('text')
                                        .then((orderNumber) => {
                                            cy.get('[data-qa="thanks-page-order-number"]').click()
                                            cy.url().should('match', /user\/orders\/active#order_id=/)
                                            cy.log("Проверка номера заказа")
                                            // Получение данных с текущей датой
                                            let date = new Date;
                                            let month = "0" + (date.getMonth() + 1);
                                            let fullYear = date.getFullYear();
                                            let year = fullYear.toString().slice(-2);
                                            // Составление шаблона номера заказа (ругулярки) с актуальным месяцем и годом

                                            let pattern = new RegExp('№ ' + year + month + '-2[0-9]{5}-[0-9]{5}')
                                            cy.get('[data-qa="number"]')
                                                .first()
                                                .invoke('text')
                                                .should('match', pattern)
                                                .should((orderNumberCabinet) => {
                                                    expect(orderNumber.replace(/\s/g, '')).to.include(orderNumberCabinet.replace(/\s/g, ''))
                                                })
                                        })
                                    cy.log("Проверка суммы заказа в ЛК")
                                    cy.get('[data-qa="total-cost"]')
                                        .first()
                                        .should('be.visible')
                                        .invoke('text')
                                        .should((totalSumCabinet) => {
                                            expect(totalSumOrderPage.replace(/\D/g, '')).to.eq(totalSumCabinet.replace(/\D/g, ''))
                                        })
                                })
                            cy.log("Проверка адреса ПВЗ")
                            cy.get('[data-qa="order-card"] [data-qa="delivery-address"]')
                                .first()
                                .should('be.visible')
                                .invoke('text')
                                .should((expectedPvzFromOrder) => {
                                    expect("Самовывоз из офиса: " + officeName.trim() + "".trim()).to.eq(expectedPvzFromOrder.trim())
                                })
                            cy.log("Проверка отображения кн. Оплатить онлайн в ЛК")
                            cy.get('[data-qa="online-payment-button"]')
                                .contains('Оплатить онлайн')
                                .should('be.visible')
                            cy.log("Проверка отображения статуса заказа, даты доставки, order-id")
                            cy.get('[data-qa="delivery-date"]')
                                .first()
                                .should('be.visible')
                                .should('not.contain', 'Уточнит менеджер')
                            cy.get('[data-qa="status"]')
                                .first()
                                .should('be.visible')
                            cy.get('[data-qa="order-card"]')
                                .first()
                                .should('be.visible')
                                .should('have.attr', 'data-order-id')
                                .should('not.empty')
                        })
                    const end = new Date().getTime();
                    cy.log(`Тест отработал за ${end - start} миллисекунд`);
                })
        })
    }
)